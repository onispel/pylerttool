# generated by datamodel-codegen:
#   filename:  am_model.yaml
#   timestamp: 2022-09-21T14:37:18+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import AnyUrl, BaseModel, Extra, Field


class Model(BaseModel):
    __root__: Any


class Status(Enum):
    ready = "ready"
    settling = "settling"
    disabled = "disabled"


class AlertmanagerConfig(BaseModel):
    original: str


class VersionInfo(BaseModel):
    version: str
    revision: str
    branch: str
    buildUser: str
    buildDate: str
    goVersion: str


class PeerStatus(BaseModel):
    name: str
    address: str


class State(Enum):
    expired = "expired"
    active = "active"
    pending = "pending"


class SilenceStatus(BaseModel):
    state: State


class Matcher(BaseModel):
    name: str
    value: str
    isRegex: bool
    isEqual: Optional[bool] = True


class State1(Enum):
    unprocessed = "unprocessed"
    active = "active"
    suppressed = "suppressed"


class AlertStatus(BaseModel):
    state: State1
    silencedBy: List[str]
    inhibitedBy: List[str]


class Receiver(BaseModel):
    name: str


class LabelSet(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ClusterStatus(BaseModel):
    name: Optional[str] = None
    status: Status
    peers: Optional[List[PeerStatus]] = None


class Matchers(BaseModel):
    __root__: List[Matcher] = Field(..., min_items=1)


class Alert(BaseModel):
    labels: LabelSet
    generatorURL: Optional[AnyUrl] = None


class GettableAlert(Alert):
    annotations: LabelSet
    receivers: List[Receiver]
    fingerprint: str
    startsAt: datetime
    updatedAt: datetime
    endsAt: datetime
    status: AlertStatus


class PostableAlert(Alert):
    startsAt: Optional[datetime] = None
    endsAt: Optional[datetime] = None
    annotations: Optional[LabelSet] = None


class AlertGroup(BaseModel):
    labels: LabelSet
    receiver: Receiver
    alerts: List[GettableAlert]


class AlertmanagerStatus(BaseModel):
    cluster: ClusterStatus
    versionInfo: VersionInfo
    config: AlertmanagerConfig
    uptime: datetime


class Silence(BaseModel):
    matchers: Matchers
    startsAt: datetime
    endsAt: datetime
    createdBy: str
    comment: str


class GettableSilence(Silence):
    id: str
    status: SilenceStatus
    updatedAt: datetime


class PostableSilence(Silence):
    id: Optional[str] = None


class GettableSilences(BaseModel):
    __root__: List[GettableSilence]


class GettableAlerts(BaseModel):
    __root__: List[GettableAlert]


class PostableAlerts(BaseModel):
    __root__: List[PostableAlert]


class AlertGroups(BaseModel):
    __root__: List[AlertGroup]
